#!/usr/bin/env python3
"""
Exemplo de uso do Sistema RAG com PostgreSQL e pgvector
Este arquivo demonstra como usar o sistema programaticamente
"""

import os
from src.rag_chain import RAGChain
from src.config import Config

def main():
    """Exemplo completo de uso do sistema RAG"""
    
    print("üöÄ Sistema RAG - Exemplo de Uso")
    print("=" * 50)
    
    # Verificar configura√ß√µes
    if not Config.validate_config():
        print("‚ùå Configura√ß√µes inv√°lidas. Verifique o arquivo .env")
        return
    
    try:
        # Inicializar sistema RAG
        print("üîß Inicializando sistema RAG...")
        rag = RAGChain()
        
        # Verificar informa√ß√µes da cole√ß√£o
        print("\nüìä Informa√ß√µes da cole√ß√£o:")
        info = rag.get_collection_info()
        for key, value in info.items():
            print(f"   {key}: {value}")
        
        # Exemplo 1: Indexar um PDF
        pdf_path = "exemplo.pdf"  # Substitua pelo caminho do seu PDF
        if os.path.exists(pdf_path):
            print(f"\nüìñ Indexando PDF: {pdf_path}")
            chunks_count = rag.index_pdf(pdf_path)
            print(f"‚úÖ Indexados {chunks_count} chunks")
        else:
            print(f"\n‚ö†Ô∏è PDF n√£o encontrado: {pdf_path}")
            print("   Pule esta etapa ou adicione um PDF v√°lido")
        
        # Exemplo 2: Buscar documentos similares
        print(f"\nüîç Buscando documentos similares...")
        query = "intelig√™ncia artificial"
        docs = rag.search_only(query, k=2)
        
        print(f"Documentos encontrados para '{query}':")
        for i, doc in enumerate(docs, 1):
            source = doc.metadata.get("source", "Desconhecido")
            page = doc.metadata.get("page", "N/A")
            print(f"   {i}. {source} | P√°gina: {page}")
            print(f"      Trecho: {doc.page_content[:100]}...")
        
        # Exemplo 3: Fazer perguntas
        print(f"\n‚ùì Fazendo perguntas...")
        questions = [
            "Qual √© o tema principal do documento?",
            "Quais s√£o os pontos mais importantes?",
            "Resuma o conte√∫do em 3 frases"
        ]
        
        for question in questions:
            print(f"\nPergunta: {question}")
            try:
                result = rag.chat(question, show_sources=True)
                print(f"Resposta: {result['result']}")
            except Exception as e:
                print(f"Erro: {str(e)}")
        
        # Exemplo 4: Modo interativo simples
        print(f"\nü§ñ Modo interativo (digite 'sair' para encerrar):")
        while True:
            try:
                user_input = input("\n‚ùì Sua pergunta: ").strip()
                
                if user_input.lower() in ['sair', 'exit', 'quit']:
                    break
                
                if user_input:
                    result = rag.chat(user_input, show_sources=False)
                    print(f"üí° {result['result']}")
                    
            except KeyboardInterrupt:
                break
            except Exception as e:
                print(f"‚ùå Erro: {str(e)}")
        
        print("\nüëã Exemplo conclu√≠do!")
        
    except Exception as e:
        print(f"‚ùå Erro geral: {str(e)}")

def exemplo_avancado():
    """Exemplo com configura√ß√µes avan√ßadas"""
    
    print("\nüî¨ Exemplo Avan√ßado")
    print("=" * 30)
    
    try:
        # Configurar com par√¢metros customizados
        from src.vector_store import VectorStoreManager
        
        # Vector store manager customizado
        vector_manager = VectorStoreManager()
        
        # RAG chain com configura√ß√µes espec√≠ficas
        rag = RAGChain(vector_store_manager=vector_manager)
        
        # Buscar com mais resultados
        print("üîç Busca avan√ßada...")
        docs = rag.search_only("tecnologia", k=5)
        
        print(f"Encontrados {len(docs)} documentos:")
        for i, doc in enumerate(docs, 1):
            print(f"   {i}. {doc.metadata.get('source', 'N/A')}")
        
        # Pergunta com resposta detalhada
        print("\n‚ùì Pergunta detalhada...")
        result = rag.chat(
            "Explique detalhadamente os conceitos principais",
            show_sources=True
        )
        
        print("‚úÖ Exemplo avan√ßado conclu√≠do!")
        
    except Exception as e:
        print(f"‚ùå Erro no exemplo avan√ßado: {str(e)}")

if __name__ == "__main__":
    # Executar exemplo b√°sico
    main()
    
    # Executar exemplo avan√ßado
    exemplo_avancado()
